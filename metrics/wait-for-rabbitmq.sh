#!/bin/bash
# Включаем режим завершения скрипта при любой ошибке
# Это гарантирует, что скрипт прекратит выполнение, если возникнет ошибка
set -e

# Получаем имя хоста RabbitMQ из первого аргумента
# 'shift' сдвигает аргументы, чтобы следующий аргумент стал командой, которую нужно выполнить
rabbit_host="$1"
shift

# Сохраняем оставшиеся аргументы как команду для выполнения после подключения к RabbitMQ
exec_command="$@"

# Печатаем сообщение о начале проверки доступности RabbitMQ на указанном хосте
echo "Проверка доступности RabbitMQ на хосте: $rabbit_host:5672..."

# Входим в цикл, который будет выполняться до тех пор, пока RabbitMQ не станет доступен
# Используется команда nc для проверки порта 5672 (по умолчанию порт RabbitMQ)
while ! nc -z "$rabbit_host" 5672; do
  # Если RabbitMQ недоступен, выводим сообщение и повторяем попытку через 1 секунду
  >&2 echo "RabbitMQ временно недоступен. Ожидаем..."
  sleep 1
done

# Как только RabbitMQ становится доступным, выводим сообщение о успешном подключении
>&2 echo "RabbitMQ успешно подключен. Выполняем команду: $exec_command"

# Выполняем команду, переданную как аргумент, после того как RabbitMQ стал доступен
exec $exec_command
